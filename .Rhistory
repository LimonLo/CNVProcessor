gc()
usethis::use_r("loadCNV2GR")
usethis::use_package("GenomicRanges",type = "Imports")
usethis::use_package("tidyverse",type = "Imports")
usethis::use_package("plyranges",type = "Imports")
usethis::use_package("org.Hs.eg.db",type = "Imports")
usethis::use_package("purrr",type = "Imports")
usethis::use_package("dplyr",type = "Imports")
usethis::use_package("ggplot2",type = "Imports")
usethis::use_package("tidyr",type = "Imports")
gc()
usethis::use_pipe()
devtools::document()
usethis::use_r("fullCNV")
usethis::use_package("BSgenome.Hsapiens.UCSC.hg19",type = "Imports")
usethis::use_package("BSgenome.Hsapiens.UCSC.hg38",type = "Imports")
usethis::use_r("mergeRawCNV")
usethis::use_r("mergeFullCNV")
usethis::use_r("cmpCNV")
usethis::use_r("cmpGroups")
usethis::use_r("cmpCNVlist")
usethis::use_r("CNVlist2df")
usethis::use_r("cmpCNVplot")
usethis::use_r("sCNVplot")
usethis::use_r("mCNVplot")
usethis::use_r("annoCNV")
usethis::use_package("utils",type = "Imports")
usethis::use_package("GenomeInfoDb",type = "Imports")
usethis::use_package("S4Vectors",type = "Imports")
devtools::document()
usethis::use_mit_license()
devtools::build()
devtools::build()
devtools::build()
library(CNVProcessor)
library(CNVProcessor)
gr1_file <- system.file("extdata", "test1.txt", package = "CNVProcessor")
devtools::document()
devtools::build()
library(CNVProcessor)
library(CNVProcessor)
devtools::document()
usethis::use_mit_license()
devtools::build()
library(CNVProcessor)
gr1_file <- system.file("extdata", "test1.txt", package = "CNVProcessor")
gr1 <- loadCNVtoGranges(cnvfile = "H:/Rpackage/CNVProcessor/inst/extdata/test1.txt", start = "start", end = "end", cn = "cn", seqnames = "seqnames")
BiocManager::install("BSgenome.Hsapiens.UCSC.hg38")
devtools::document()
usethis::use_mit_license()
devtools::build()
library(CNVProcessor)
gr1_file <- system.file("extdata", "test1.txt", package = "CNVProcessor")
gr1 <- loadCNVtoGranges(cnvfile = "H:/Rpackage/CNVProcessor/inst/extdata/test1.txt", start = "start", end = "end", cn = "cn", seqnames = "seqnames")
rm(gr1_file)
gr2 <- loadCNVtoGranges(cnvfile = "H:/Rpackage/CNVProcessor/inst/extdata/test2.txt", start = "start", end = "end", cn = "cn", seqnames = "seqnames")
gr3 <- loadCNVtoGranges(cnvfile = "H:/Rpackage/CNVProcessor/inst/extdata/test3.txt", start = "start", end = "end", cn = "cn", seqnames = "seqnames")
gr4 <- loadCNVtoGranges(cnvfile = "H:/Rpackage/CNVProcessor/inst/extdata/test4.txt", start = "start", end = "end", cn = "cn", seqnames = "seqnames")
head(gr1)
gr1_full <- fullCNV(gr = gr1)
devtools::document()
usethis::use_mit_license()
devtools::build()
library(CNVProcessor)
head(gr1)
gr1_full <- fullCNV(gr = gr1)
devtools::document()
usethis::use_mit_license()
devtools::build()
gr1_full <- fullCNV(gr = gr1)
usethis::use_package("GenomicRanges",type = "Depends")
usethis::use_package("GenomicRanges",type = "Imports")
devtools::document()
usethis::use_mit_license()
devtools::build()
library(CNVProcessor)
gr1_full <- fullCNV(gr = gr1)
gr1 <- loadCNVtoGranges(cnvfile = "H:/Rpackage/CNVProcessor/inst/extdata/test1.txt", start = "start", end = "end", cn = "cn", seqnames = "seqnames")
head(gr1)
gr1_full <- fullCNV(gr = gr1)
head(gr1_full)
gr_merge <- mergeRawCNV(sample_list=list(gr1=gr1,gr2=gr2))
gr1 <- loadCNVtoGranges(cnvfile = "H:/Rpackage/CNVProcessor/inst/extdata/test1.txt", start = "start", end = "end", cn = "cn", seqnames = "seqnames")
gr2 <- loadCNVtoGranges(cnvfile = "H:/Rpackage/CNVProcessor/inst/extdata/test2.txt", start = "start", end = "end", cn = "cn", seqnames = "seqnames")
gr3 <- loadCNVtoGranges(cnvfile = "H:/Rpackage/CNVProcessor/inst/extdata/test3.txt", start = "start", end = "end", cn = "cn", seqnames = "seqnames")
head(gr1)
gr1_full <- fullCNV(gr = gr1)
head(gr1_full)
gr_merge <- mergeRawCNV(sample_list=list(gr1=gr1,gr2=gr2))
head(gr_merge)
gr1 <- loadCNVtoGranges(cnvfile = "H:/Rpackage/CNVProcessor/inst/extdata/test1.txt", start = "start", end = "end", cn = "cn", seqnames = "seqnames")
gr2 <- loadCNVtoGranges(cnvfile = "H:/Rpackage/CNVProcessor/inst/extdata/test2.txt", start = "start", end = "end", cn = "cn", seqnames = "seqnames")
gr3 <- loadCNVtoGranges(cnvfile = "H:/Rpackage/CNVProcessor/inst/extdata/test3.txt", start = "start", end = "end", cn = "cn", seqnames = "seqnames")
head(gr1)
gr1 <- loadCNVtoGranges(cnvfile = "H:/Rpackage/CNVProcessor/inst/extdata/test1.txt", start = "start", end = "end", cn = "cn", seqnames = "seqnames")
gr2 <- loadCNVtoGranges(cnvfile = "H:/Rpackage/CNVProcessor/inst/extdata/test2.txt", start = "start", end = "end", cn = "cn", seqnames = "seqnames")
gr3 <- loadCNVtoGranges(cnvfile = "H:/Rpackage/CNVProcessor/inst/extdata/test3.txt", start = "start", end = "end", cn = "cn", seqnames = "seqnames")
head(gr1)
gr1_full <- fullCNV(gr = gr1)
head(gr1_full)
gr_merge <- mergeRawCNV(sample_list=list(gr1=gr1,gr2=gr2))
head(gr_merge)
gr_merge <- mergeFullCNV(sample_list =list(gr1=gr1,gr2=gr2),genome_version = "hg19",default_cn = 2 )
?mergeFullCNV
head(gr_merge)
gr_merge <- cmpCNV(sample1=gr1,sample2=gr2)
head(gr_merge)
gr4 <- loadCNVtoGranges(cnvfile = "H:/Rpackage/CNVProcessor/inst/extdata/test4.txt", start = "start", end = "end", cn = "cn", seqnames = "seqnames")
gr_merge <- mergeFullCNV(sample_list=list(gr1=gr1,gr2=gr2,gr3=gr3,gr4=gr4),genome_version ="hg19")
cmpGroups_result <- cmpGroups(gr=gr_merge,control=c("gr1","gr2"),treat=c("gr3","gr4"),method="t.test")
head(cmpGroups_result)
cmpCNVplot(data=gr_merge,genome_version = "hg19",fc_col = "FC")
cmpCNVplot(data=cmpGroups_result,genome_version = "hg19",fc_col = "FC")
devtools::document()
usethis::use_mit_license()
devtools::build()
library(CNVProcessor)
cmpCNVplot(data=cmpGroups_result,genome_version = "hg19",fc_col = "FC")
head(cmpGroups_result)
gr_merge <- cmpCNV(sample1=gr1,sample2=gr2)
cmpCNVplot(data=gr_merge,genome_version = "hg19",fc_col = "FC")
head(gr_merge)
devtools::document()
usethis::use_mit_license()
devtools::build()
library(CNVProcessor)
cmpCNVplot(data=gr_merge,genome_version = "hg19",fc_col = "FC")
cmpCNVlist_result <- cmpCNVlist(Treat=list(gr1=gr1,gr2=gr2),Control=gr3)
head(cmpCNVlist_result)
df <- CNVlist2df(cmpCNVlist_result)
head(df)
sCNVplot(data=gr1,genome_version = "hg19",title = "",cn_col = "cn",normal = 2,chroms = paste0("chr", 1:5),ylab = "CNV",show_chrom_labels = T)
devtools::document()
usethis::use_mit_license()
devtools::build()
library(CNVProcessor)
head(cmpGroups_result)
cmpCNVplot(data=cmpGroups_result,genome_version = "hg19",fc_col = "FC")
cmpCNVplot(data=cmpGroups_result,genome_version = "hg19")
gr1_anno <- annoCNV(gr=gr1,genome_version = "hg19")
bs_pkg <- BSgenome.Hsapiens.UCSC.hg19
bs_pkg <- "BSgenome.Hsapiens.UCSC.hg19"
bs_genome <- getExportedValue(bs_pkg, "Hsapiens")
all_seqlengths <- GenomeInfoDb::seqlengths(bs_genome)
seqlengths <- all_seqlengths[paste0("chr", c(1:22, "X", "Y"))]
# Calculate cumulative coordinate offset (for user-selected chromosomes only)
cum_offset <- data.frame(
seqnames = paste0("chr", c(1:22, "X", "Y")),
offset = cumsum(c(0, head(seqlengths, -1))),
stringsAsFactors = FALSE
)
View(cum_offset)
cmpCNVlist_result <- as.data.frame(cmpCNVlist_result)
View(cmpGroups_result)
data <- as.data.frame(cmpGroups_result)
plot_data <- data %>%
dplyr::filter(seqnames %in% paste0("chr", c(1:22, "X", "Y"))) %>%
dplyr::left_join(cum_offset, by = "seqnames") %>%
dplyr::mutate(
global_start = start + offset,
global_end = end + offset,
FC = .data[[fc_col]]
)
head(data)
plot_data <- data %>%
dplyr::filter(seqnames %in% paste0("chr", c(1:22, "X", "Y"))) %>%
dplyr::left_join(cum_offset, by = "seqnames") %>%
dplyr::mutate(
global_start = start + offset,
global_end = end + offset,
FC = .data[[FC]]
)
plot_data <- data %>%
dplyr::filter(seqnames %in% paste0("chr", c(1:22, "X", "Y"))) %>%
dplyr::left_join(cum_offset, by = "seqnames") %>%
dplyr::mutate(
global_start = start + offset,
global_end = end + offset
)
head(plot_data)
# Calculate chromosome separator coordinates (only for user-selected chromosomes)
chrom_ends <- cum_offset %>%
dplyr::mutate(
chrom_end = seqlengths[seqnames] + offset,
mid_pos = offset + seqlengths[seqnames]/2
)
# plot
p <- ggplot2::ggplot() +
ggplot2::geom_rect(
data = filter(plot_data, FC > normal),
ggplot2::aes(xmin = global_start, xmax = global_end, ymin = 0, ymax = FC),
fill = amp_color, color = NA, alpha = 0.7
) +
ggplot2::geom_rect(
data = filter(plot_data, FC < normal),
ggplot2::aes(xmin = global_start, xmax = global_end, ymin = FC, ymax = 0),
fill = del_color, color = NA, alpha = 0.7
) +
ggplot2::geom_vline(
data = chrom_ends,
ggplot2::aes(xintercept = chrom_end),
color = "gray40", linetype = "dashed", linewidth = 0.3
) +
ggplot2::scale_x_continuous(expand = c(0, 0)) +
ggplot2::scale_y_continuous(expand = expansion(mult = 0.1)) +
ggplot2::labs(x = xlab, y = ylab, title = title) +
ggplot2::theme_classic() +
ggplot2::theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.y = element_line(color = "grey90"),
plot.title = element_text(hjust = 0.5),
panel.border = element_rect(color = "black", fill = NA)
)
# plot
p <- ggplot2::ggplot() +
ggplot2::geom_rect(
data = filter(plot_data, FC > normal),
ggplot2::aes(xmin = global_start, xmax = global_end, ymin = 0, ymax = FC),
fill = "red", color = NA, alpha = 0.7
) +
ggplot2::geom_rect(
data = filter(plot_data, FC < normal),
ggplot2::aes(xmin = global_start, xmax = global_end, ymin = FC, ymax = 0),
fill = "blue", color = NA, alpha = 0.7
) +
ggplot2::geom_vline(
data = chrom_ends,
ggplot2::aes(xintercept = chrom_end),
color = "gray40", linetype = "dashed", linewidth = 0.3
) +
ggplot2::scale_x_continuous(expand = c(0, 0)) +
ggplot2::scale_y_continuous(expand = expansion(mult = 0.1)) +
ggplot2::labs(x = xlab, y = ylab, title = title) +
ggplot2::theme_classic() +
ggplot2::theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.y = element_line(color = "grey90"),
plot.title = element_text(hjust = 0.5),
panel.border = element_rect(color = "black", fill = NA)
)
head(plot_data)
View(plot_data)
colnames(plot_data)
data = filter(plot_data, FC > normal)
data <- as.data.frame(cmpGroups_result)
head(data)
plot_data <- data %>%
dplyr::filter(seqnames %in% paste0("chr", c(1:22, "X", "Y"))) %>%
dplyr::left_join(cum_offset, by = "seqnames") %>%
dplyr::mutate(
global_start = start + offset,
global_end = end + offset
FC = .data[[fc_col]]
plot_data <- data %>%
dplyr::filter(seqnames %in% paste0("chr", c(1:22, "X", "Y"))) %>%
dplyr::left_join(cum_offset, by = "seqnames") %>%
dplyr::mutate(
global_start = start + offset,
global_end = end + offset,
FC = .data[[fc_col]]
)
plot_data <- data %>%
dplyr::filter(seqnames %in% paste0("chr", c(1:22, "X", "Y"))) %>%
dplyr::left_join(cum_offset, by = "seqnames") %>%
dplyr::mutate(
global_start = start + offset,
global_end = end + offset,
FC = .data[[FC]]
)
View(plot_data)
# plot
p <- ggplot2::ggplot() +
ggplot2::geom_rect(
data = filter(plot_data, plot_data$FC > normal),
ggplot2::aes(xmin = global_start, xmax = global_end, ymin = 0, ymax = FC),
fill = "red", color = NA, alpha = 0.7
) +
ggplot2::geom_rect(
data = filter(plot_data, plot_data$FC < normal),
ggplot2::aes(xmin = global_start, xmax = global_end, ymin = FC, ymax = 0),
fill = "blue", color = NA, alpha = 0.7
) +
ggplot2::geom_vline(
data = chrom_ends,
ggplot2::aes(xintercept = chrom_end),
color = "gray40", linetype = "dashed", linewidth = 0.3
) +
ggplot2::scale_x_continuous(expand = c(0, 0)) +
ggplot2::scale_y_continuous(expand = expansion(mult = 0.1)) +
ggplot2::labs(x = xlab, y = ylab, title = title) +
ggplot2::theme_classic() +
ggplot2::theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.y = element_line(color = "grey90"),
plot.title = element_text(hjust = 0.5),
panel.border = element_rect(color = "black", fill = NA)
)
# plot
p <- ggplot2::ggplot() +
ggplot2::geom_rect(
data = filter(plot_data, plot_data$FC > 0),
ggplot2::aes(xmin = global_start, xmax = global_end, ymin = 0, ymax = FC),
fill = "red", color = NA, alpha = 0.7
) +
ggplot2::geom_rect(
data = filter(plot_data, plot_data$FC < 0),
ggplot2::aes(xmin = global_start, xmax = global_end, ymin = FC, ymax = 0),
fill = "blue", color = NA, alpha = 0.7
) +
ggplot2::geom_vline(
data = chrom_ends,
ggplot2::aes(xintercept = chrom_end),
color = "gray40", linetype = "dashed", linewidth = 0.3
) +
ggplot2::scale_x_continuous(expand = c(0, 0)) +
ggplot2::scale_y_continuous(expand = expansion(mult = 0.1)) +
ggplot2::labs(x = xlab, y = ylab, title = title) +
ggplot2::theme_classic() +
ggplot2::theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.y = element_line(color = "grey90"),
plot.title = element_text(hjust = 0.5),
panel.border = element_rect(color = "black", fill = NA)
)
# plot
class(plot_data)
# plot
head(plot_data)
p <- ggplot2::ggplot() +
ggplot2::geom_rect(
data = filter(plot_data, plot_data$FC > 0),
ggplot2::aes(xmin = global_start, xmax = global_end, ymin = 0, ymax = FC),
fill = "red", color = NA, alpha = 0.7
) +
ggplot2::geom_rect(
data = filter(plot_data, plot_data$FC < 0),
ggplot2::aes(xmin = global_start, xmax = global_end, ymin = FC, ymax = 0),
fill = "blue", color = NA, alpha = 0.7
)  +
ggplot2::scale_x_continuous(expand = c(0, 0)) +
ggplot2::scale_y_continuous(expand = expansion(mult = 0.1)) +
ggplot2::labs(x = xlab, y = ylab, title = title) +
ggplot2::theme_classic() +
ggplot2::theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.y = element_line(color = "grey90"),
plot.title = element_text(hjust = 0.5),
panel.border = element_rect(color = "black", fill = NA)
)
p <- ggplot2::ggplot() +
ggplot2::geom_rect(
data = filter(plot_data, plot_data$FC > 0),
ggplot2::aes(xmin = plot_data$global_start, xmax = plot_data$global_end, ymin = 0, ymax = plot_data$FC),
fill = "red", color = NA, alpha = 0.7
) +
ggplot2::geom_rect(
data = filter(plot_data, plot_data$FC < 0),
ggplot2::aes(xmin = plot_data$global_start, xmax = plot_data$global_end, ymin = plot_data$FC, ymax = 0),
fill = "blue", color = NA, alpha = 0.7
)  +
ggplot2::scale_x_continuous(expand = c(0, 0)) +
ggplot2::scale_y_continuous(expand = expansion(mult = 0.1)) +
ggplot2::labs(x = xlab, y = ylab, title = title) +
ggplot2::theme_classic() +
ggplot2::theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.y = element_line(color = "grey90"),
plot.title = element_text(hjust = 0.5),
panel.border = element_rect(color = "black", fill = NA)
)
p <- ggplot2::ggplot() +
ggplot2::geom_rect(
data = dplyr::filter(plot_data, plot_data$FC > 0),
ggplot2::aes(xmin = global_start, xmax = global_end, ymin = 0, ymax = FC),
fill = "red", color = NA, alpha = 0.7
) +
ggplot2::geom_rect(
data = dplyr::filter(plot_data, plot_data$FC < 0),
ggplot2::aes(xmin = global_start, xmax = global_end, ymin = FC, ymax = 0),
fill = "blue", color = NA, alpha = 0.7
)  +
ggplot2::scale_x_continuous(expand = c(0, 0)) +
ggplot2::scale_y_continuous(expand = expansion(mult = 0.1)) +
ggplot2::labs(x = xlab, y = ylab, title = title) +
ggplot2::theme_classic() +
ggplot2::theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.y = element_line(color = "grey90"),
plot.title = element_text(hjust = 0.5),
panel.border = element_rect(color = "black", fill = NA)
)
p <- ggplot2::ggplot() +
ggplot2::geom_rect(
data = dplyr::filter(plot_data, plot_data$FC > 0),
ggplot2::aes(xmin = global_start, xmax = global_end, ymin = 0, ymax = FC),
fill = "red", color = NA, alpha = 0.7
) +
ggplot2::geom_rect(
data = dplyr::filter(plot_data, plot_data$FC < 0),
ggplot2::aes(xmin = global_start, xmax = global_end, ymin = FC, ymax = 0),
fill = "blue", color = NA, alpha = 0.7
)  +
ggplot2::scale_x_continuous(expand = c(0, 0)) +
ggplot2::scale_y_continuous(expand = ggplot2::expansion(mult = 0.1)) +
ggplot2::labs(x = xlab, y = ylab, title = title) +
ggplot2::theme_classic() +
ggplot2::theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.y = element_line(color = "grey90"),
plot.title = element_text(hjust = 0.5),
panel.border = element_rect(color = "black", fill = NA)
)
p <- ggplot2::ggplot() +
ggplot2::geom_rect(
data = dplyr::filter(plot_data, plot_data$FC > 0),
ggplot2::aes(xmin = global_start, xmax = global_end, ymin = 0, ymax = FC),
fill = "red", color = NA, alpha = 0.7
) +
ggplot2::geom_rect(
data = dplyr::filter(plot_data, plot_data$FC < 0),
ggplot2::aes(xmin = global_start, xmax = global_end, ymin = FC, ymax = 0),
fill = "blue", color = NA, alpha = 0.7
)  +
ggplot2::scale_x_continuous(expand = c(0, 0)) +
ggplot2::scale_y_continuous(expand = ggplot2::expansion(mult = 0.1)) +
ggplot2::labs(x = "", y = "ylab", title = "") +
ggplot2::theme_classic() +
ggplot2::theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.y = element_line(color = "grey90"),
plot.title = element_text(hjust = 0.5),
panel.border = element_rect(color = "black", fill = NA)
)
p <- ggplot2::ggplot() +
ggplot2::geom_rect(
data = dplyr::filter(plot_data, plot_data$FC > 0),
ggplot2::aes(xmin = global_start, xmax = global_end, ymin = 0, ymax = FC),
fill = "red", color = NA, alpha = 0.7
) +
ggplot2::geom_rect(
data = dplyr::filter(plot_data, plot_data$FC < 0),
ggplot2::aes(xmin = global_start, xmax = global_end, ymin = FC, ymax = 0),
fill = "blue", color = NA, alpha = 0.7
)  +
ggplot2::scale_x_continuous(expand = c(0, 0)) +
ggplot2::scale_y_continuous(expand = ggplot2::expansion(mult = 0.1)) +
ggplot2::labs(x = "", y = "ylab", title = "") +
ggplot2::theme_classic() +
ggplot2::theme(
axis.text.x = ggplot2::element_blank(),
axis.ticks.x = ggplot2::element_blank(),
panel.grid.major.y = ggplot2::element_line(color = "grey90"),
plot.title = ggplot2::element_text(hjust = 0.5),
panel.border = ggplot2::element_rect(color = "black", fill = NA)
)
p
devtools::document()
usethis::use_mit_license()
devtools::build()
library(CNVProcessor)
cmpCNVplot(data=cmpGroups_result,genome_version = "hg19",fc_col = "FC")
gr1_anno <- annoCNV(gr=gr1,genome_version = "hg19")
usethis::use_package("AnnotationDbi",type = "Imports")
devtools::document()
usethis::use_mit_license()
devtools::build()
library(CNVProcessor)
sCNVplot(data=gr1,genome_version = "hg19",title = "",cn_col = "cn",normal = 2,chroms = paste0("chr", 1:5),ylab = "CNV",show_chrom_labels = T)
gr1_anno <- annoCNV(gr=gr1,genome_version = "hg19")
head(gr1)
head(gr1_anno)
View(gr1_anno)
devtools::document()
usethis::use_mit_license()
devtools::build()
library(CNVProcessor)
sCNVplot(data=gr1,genome_version = "hg19",title = "",cn_col = "cn",normal = 2,chroms = paste0("chr", 1:5),ylab = "CNV",show_chrom_labels = T)
gr1_full <- fullCNV(gr = gr1)
head(gr1_full)
sCNVplot(data=gr1_full,genome_version = "hg19",title = "",cn_col = "cn",normal = 2,chroms = paste0("chr", 1:5),ylab = "CNV",show_chrom_labels = T)
?annoCNV
